What is extrema?

"EXTREMA is a high level, interactive programming environment with user friendly
graphics and sophisticated mathematical analysis capabilities. Over 200 numeric
and character functions are provided, as well as over 30 operators, providing
all of the operations of simple calculus, along with powerful curve fitting,
filtering and smoothing techniques, and employing a dynamic array management
scheme allowing arrays limited in size only by system resources. Algebraic
expressions of arbitrary complexity are evaluated using a lexical scanner
approach. Line graphs and histograms, as well as contour and density plots
are available. The user interface is a command language with a
simple to use and easy to learn syntax, incorporating basic elements of a
structured programming language including conditional branching, looping and
subroutine calling constructs."

Extrema runs under 32 bit Windows and 32 bit Linux.

Basic Tasks...

1) Create arrays of numeric values

Create the array of square roots of n for n=1,2,...,9
-------------------------------------------------------------------------------
A1 = SQRT([1:9])   or   X = [1:9]      or   GENERATE X 1,,9 9
                        A1 = SQRT(X)        A1 = SQRT(X)
-------------------------------------------------------------------------------

Create an array of 15 random real values uniformly distributed
between 0 and 10
-------------------------------------------------------------------------------
GENERATE\RANDOM A2 0 10 15   or   A2 = RAN([1:15])*10
-------------------------------------------------------------------------------

Create a 5x3 array of integers chosen randomly between 1 and 100
-------------------------------------------------------------------------------
A3 = FOLD(INT(RAN([1:15])*99+1),5)
-------------------------------------------------------------------------------

Define the following vectors of 9 elements each:
u = (7,4,9.9,0,4,3,6,2.1,1.9)
v = (0,0,0,0,0,0,0,0,0)
w = (1.1,1.2,1.3,...,1.9)
-------------------------------------------------------------------------------
U = [7;4;9.9;0;4;3;6;2.1;1.9]
V[1:9] = 0
W = [1.1:1.9:.1]
-------------------------------------------------------------------------------

Define the following matrices:
m1 = 3×4 matrix of zeroes
m2 = the 3×3 matrix where row1=(1,2,0), row2=(2,5,-1), row3=(4,10,-1)
m3 = transpose of m2
m4 = dot product of m2 and m3
m5 = sum of m2 and m3
m6 = elementwise product of m2 and m3
m7 = matrix inverse of m2
m8 = the 5×5 identity matrix
-------------------------------------------------------------------------------
MATRIX M1 3 4
M2 = [[1;2;4];[2;5;10];[0;-1;-1]]
M3 = <-M2
M4 = M2<>M3
M5 = M2 + M3
M6 = M2*M3
M7 = INVERSE(M2)
M8 = IDENTITY(5)
-------------------------------------------------------------------------------

2) Create and plot an array

Create an array x=(2,2.3,2.6,...,4.7,5) and plot sqrt(x) vs. x
as a line plot
-------------------------------------------------------------------------------
X = [2:5:.3]
SET PLOTSYMBOL 0
GRAPH X SQRT(X)
-------------------------------------------------------------------------------

Plot sqrt(x) vs. x with disconnected plot symbols
-------------------------------------------------------------------------------
SET PLOTSYMBOL -1
GRAPH X SQRT(X)
-------------------------------------------------------------------------------

3) Add and plot vectors

Add two vectors, u = (3,0,1,4,2,6,4) and v = (1,2,3,4,5,6,7),
each with 7 elements, then plot the values of the result.
-------------------------------------------------------------------------------
U = [3;0;1;4;2;6;4]
V = [1:7]
GRAPH U+V
-------------------------------------------------------------------------------

or

-------------------------------------------------------------------------------
GRAPH [3;0;1;4;2;6;4]+[1:7]
-------------------------------------------------------------------------------

4) Plot functions

Plot a function of one variable (line graph), e.g.,
plot y = sin(4x) for 2.2 < x < 4.4
-------------------------------------------------------------------------------
GENERATE X 2.2,,4.4 100
SET PLOTSYMBOL 0
GRAPH X SIN(4*X)
-------------------------------------------------------------------------------

5) Read data from files

read v.dat (25 numbers in "E" notation)
read xy.dat (30 lines, each with an x and a y value)
read m.dat (45 numbers, 5 per line)
-------------------------------------------------------------------------------
READ V.DAT V
READ XY.DAT X Y
READ\MATRIX M.DAT M 5 9
-------------------------------------------------------------------------------

6)  Write data to a file

Create a 10×3 array A where the first column are the x values 1 through 10, the
second column are the y values where y(x) = sqrt(x) and the third column are the
z values where z = x^2. Write the values of A to file A.dat, one row per
line. Generate a 7×11 matrix R of random values (uniform on [0,1]), and write
this matrix to file ranm.dat.
-------------------------------------------------------------------------------
X = [1:10]
A[1:10,1] = X
A[1:10,2] = SQRT(X)
A[1:10,3] = X^2
WRITE\MATRIX 'A.DAT' A
R = FOLD(RAN([1:77]),7)
WRITE\MATRIX 'RANM.DAT' R
-------------------------------------------------------------------------------

7) Eigenvalues and eigenvectors

Given matrix M =  5.2  -4.1
                 -4.1   5.2
calculate the eigenvalues and eigenvectors of M.
-------------------------------------------------------------------------------
Use the EIGEN function

M = [[5.2;-4.1];[-4.1;5.2]]
E = EIGEN(M)[1:2,3]
V = EIGEN(M)[1:2,1:2]
-------------------------------------------------------------------------------

8) Integrate a function

Integrate sqrt(2+sin(x)) from x=1.1 to x=3.3
-------------------------------------------------------------------------------
GENERATE X 1.1,,3.3 100
Y = INTEGRAL(X,SQRT(2+SIN(X)))

The last element of the vector Y is the value of the full integral.
-------------------------------------------------------------------------------

9) Solve a matrix equation

Solve Ax=b (and check the solution) given that

       1  2  0       7
   A = 2  5 -1   b = 8
       4 10 -1       9
-------------------------------------------------------------------------------
A=[[1;2;4];[2;5;10];[0;-1;-1]]
B=[7;8;9]
SOLN = GAUSSJ(A,B)
CHECK = B-A<>SOLN

The check vector should be all zero if the solution is correct.
-------------------------------------------------------------------------------

10) Fit a function

Read in arrays X and Y from xyL.dat and find the best 5th degree polynomial fit

-------------------------------------------------------------------------------
READ xyL.dat X Y
SCALAR\FIT A0 A1 A2 A3 A4 A5
FIT Y = A0+A1*X+A1*X^2+A2*X^3+A3*X^4+A4*X^5
-------------------------------------------------------------------------------

Read in arrays x and y from xyN.dat and find the best fit to
y(x) = a0*exp(a1*x)*sin(a2*x+a3)
-------------------------------------------------------------------------------
READ xyN.dat X Y
SCALAR\FIT A0 A1 A2 A3
A0 = 5
A1 = -.5
A2 = 1.5
A3 = .5
FIT Y = A0*EXP(A1*X)*SIN(A2*X+A3)
-------------------------------------------------------------------------------

11) Define and plot a function

Define f(x) = 2*exp(-x/8)*sin(1.2*x) and plot it over [0,10].
-------------------------------------------------------------------------------
F1 = 'EXP(-X/8)'
F2 = 'SIN(1.2*X)'
F = '2*F1*F2'
GENERATE X 0,,10 100
GRAPH X EVALUATE(F)
-------------------------------------------------------------------------------

12) Analyze data using FFT

Read sunspot data s from file sunspot.dat, calculate the FFT of s, and
graph the amplitudes and phases
-------------------------------------------------------------------------------
READ SUNSPOT.DAT YEAR S
WINDOW 5
SET XLABEL 'YEAR'
SET YLABEL 'S'
GRAPH YEAR S
M = FFT(S)
WINDOW 6
SET YLABEL 'AMPLITUDES'
GRAPH M[*,2]
WINDOW 7
SET YLABEL 'PHASES'
GRAPH M[*,1]
-------------------------------------------------------------------------------

13) Display data as density plots

Create a 32×32 array Z, where Z(x,y) = exp(-((x/15)^2+(y/12)^2))
for -5 <= x <= 26 and -10 <= y <= 10.
Display as a contour plot and as density plots.
-------------------------------------------------------------------------------
The following script will perform the desired operations:

GENERATE X -5,,26 32
GENERATE Y -10,,10 32
MATRIX Z 32 32
DO J=[1:32]
  DO K=[1:32]
    Z[K,J] = EXP(-((X[J]/15)^2+(Y[K]/12)^2))
  ENDDO
ENDDO
WINDOW 5
SET FILLCOLOR RED
DENSITY\BOXES X Y Z
WINDOW 6
SET COLORMAP THERMAL
DENSITY X Y Z
WINDOW 7
DENSITY\DIFFUSION X Y Z
WINDOW 8
DENSITY\DITHERING X Y Z
-------------------------------------------------------------------------------

Read 32×24 elevation data from file e.dat.
Display as a contour map and as density plots.
-------------------------------------------------------------------------------
READ\MATRIX e.dat ELEVATION 32 24
WINDOW 5
CONTOUR\LEGEND ELEVATION 15
WINDOW 6
SET COLORMAP TOPO256
DENSITY ELEVATION
WINDOW 7
SET COLORMAP GRAY256
DENSITY ELEVATION
WINDOW 8
DENSITY\DIFFUSION ELEVATION
-------------------------------------------------------------------------------

14) Plot parametric functions

Plot y = sin(x) for -10 < x < 10 with the axes reversed, i.e.,
y as the horizontal axis and x as the vertical axis.
-------------------------------------------------------------------------------
GENERATE X -10,,10 100
SET XLABEL 'SIN(X)'
SET XLABLEON 1
SET YLABEL 'X'
SET YLABELON 1
GRAPH SIN(X) X
-------------------------------------------------------------------------------

Plot (x(t),y(t)) for 0 < t < 20, where x(t) = exp(-0.1*t)*cos(t) and
y(t) = exp(-0.1*t)*sin(t).
-------------------------------------------------------------------------------
GENERATE T 0,,20 100
SET XLABEL 'E<^>-0.1*T<_>COS(T)'
SET YLABEL 'E<^>-0.1*T<_>SIN(T)'
GRAPH EXP(-0.1*T)*COS(T) EXP(-0.1*T)*SIN(T)
-------------------------------------------------------------------------------
